#pragma once
#include "lib.hpp"
#include "gl.hpp"
#include "gl2.hpp"
#include "glext.hpp"

namespace axl {
namespace glw {
namespace gl3 {
using namespace axl::glw::gl;
using namespace axl::glw::gl2;
using namespace axl::glw::glext;

// GL_VERSION_3_0
AXLGLWCONSTMODIFIER GLenum GL_CLIP_DISTANCE0 = GL_CLIP_PLANE0;
AXLGLWCONSTMODIFIER GLenum GL_CLIP_DISTANCE1 = GL_CLIP_PLANE1;
AXLGLWCONSTMODIFIER GLenum GL_CLIP_DISTANCE2 = GL_CLIP_PLANE2;
AXLGLWCONSTMODIFIER GLenum GL_CLIP_DISTANCE3 = GL_CLIP_PLANE3;
AXLGLWCONSTMODIFIER GLenum GL_CLIP_DISTANCE4 = GL_CLIP_PLANE4;
AXLGLWCONSTMODIFIER GLenum GL_CLIP_DISTANCE5 = GL_CLIP_PLANE5;
AXLGLWCONSTMODIFIER GLenum GL_COMPARE_REF_TO_TEXTURE = GL_COMPARE_R_TO_TEXTURE_ARB;
AXLGLWCONSTMODIFIER GLenum GL_MAX_CLIP_DISTANCES = GL_MAX_CLIP_PLANES;
AXLGLWCONSTMODIFIER GLenum GL_MAX_VARYING_COMPONENTS = GL_MAX_VARYING_FLOATS;
AXLGLWCONSTMODIFIER GLenum GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x0001;
AXLGLWCONSTMODIFIER GLenum GLMAJOR_VERSION = 0x821B;
AXLGLWCONSTMODIFIER GLenum GLMINOR_VERSION = 0x821C;
AXLGLWCONSTMODIFIER GLenum GL_NUM_EXTENSIONS = 0x821D;
AXLGLWCONSTMODIFIER GLenum GL_CONTEXT_FLAGS = 0x821E;
AXLGLWCONSTMODIFIER GLenum GL_DEPTH_BUFFER = 0x8223;
AXLGLWCONSTMODIFIER GLenum GL_STENCIL_BUFFER = 0x8224;
AXLGLWCONSTMODIFIER GLenum GL_RGBA32F = 0x8814;
AXLGLWCONSTMODIFIER GLenum GL_RGB32F = 0x8815;
AXLGLWCONSTMODIFIER GLenum GL_RGBA16F = 0x881A;
AXLGLWCONSTMODIFIER GLenum GL_RGB16F = 0x881B;
AXLGLWCONSTMODIFIER GLenum GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD;
AXLGLWCONSTMODIFIER GLenum GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88FF;
AXLGLWCONSTMODIFIER GLenum GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904;
AXLGLWCONSTMODIFIER GLenum GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905;
AXLGLWCONSTMODIFIER GLenum GL_CLAMP_VERTEX_COLOR = 0x891A;
AXLGLWCONSTMODIFIER GLenum GL_CLAMP_FRAGMENT_COLOR = 0x891B;
AXLGLWCONSTMODIFIER GLenum GL_CLAMP_READ_COLOR = 0x891C;
AXLGLWCONSTMODIFIER GLenum GL_FIXED_ONLY = 0x891D;
AXLGLWCONSTMODIFIER GLenum GL_TEXTURE_RED_TYPE = 0x8C10;
AXLGLWCONSTMODIFIER GLenum GL_TEXTURE_GREEN_TYPE = 0x8C11;
AXLGLWCONSTMODIFIER GLenum GL_TEXTURE_BLUE_TYPE = 0x8C12;
AXLGLWCONSTMODIFIER GLenum GL_TEXTURE_ALPHA_TYPE = 0x8C13;
AXLGLWCONSTMODIFIER GLenum GL_TEXTURE_LUMINANCE_TYPE = 0x8C14;
AXLGLWCONSTMODIFIER GLenum GL_TEXTURE_INTENSITY_TYPE = 0x8C15;
AXLGLWCONSTMODIFIER GLenum GL_TEXTURE_DEPTH_TYPE = 0x8C16;
AXLGLWCONSTMODIFIER GLenum GL_TEXTURE_1D_ARRAY = 0x8C18;
AXLGLWCONSTMODIFIER GLenum GL_PROXY_TEXTURE_1D_ARRAY = 0x8C19;
AXLGLWCONSTMODIFIER GLenum GL_TEXTURE_2D_ARRAY = 0x8C1A;
AXLGLWCONSTMODIFIER GLenum GL_PROXY_TEXTURE_2D_ARRAY = 0x8C1B;
AXLGLWCONSTMODIFIER GLenum GL_TEXTURE_BINDING_1D_ARRAY = 0x8C1C;
AXLGLWCONSTMODIFIER GLenum GL_TEXTURE_BINDING_2D_ARRAY = 0x8C1D;
AXLGLWCONSTMODIFIER GLenum GL_R11F_G11F_B10F = 0x8C3A;
AXLGLWCONSTMODIFIER GLenum GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;
AXLGLWCONSTMODIFIER GLenum GL_RGB9_E5 = 0x8C3D;
AXLGLWCONSTMODIFIER GLenum GL_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;
AXLGLWCONSTMODIFIER GLenum GL_TEXTURE_SHARED_SIZE = 0x8C3F;
AXLGLWCONSTMODIFIER GLenum GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76;
AXLGLWCONSTMODIFIER GLenum GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F;
AXLGLWCONSTMODIFIER GLenum GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80;
AXLGLWCONSTMODIFIER GLenum GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83;
AXLGLWCONSTMODIFIER GLenum GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84;
AXLGLWCONSTMODIFIER GLenum GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85;
AXLGLWCONSTMODIFIER GLenum GL_PRIMITIVES_GENERATED = 0x8C87;
AXLGLWCONSTMODIFIER GLenum GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88;
AXLGLWCONSTMODIFIER GLenum GL_RASTERIZER_DISCARD = 0x8C89;
AXLGLWCONSTMODIFIER GLenum GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;
AXLGLWCONSTMODIFIER GLenum GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B;
AXLGLWCONSTMODIFIER GLenum GL_INTERLEAVED_ATTRIBS = 0x8C8C;
AXLGLWCONSTMODIFIER GLenum GL_SEPARATE_ATTRIBS = 0x8C8D;
AXLGLWCONSTMODIFIER GLenum GL_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E;
AXLGLWCONSTMODIFIER GLenum GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F;
AXLGLWCONSTMODIFIER GLenum GL_RGBA32UI = 0x8D70;
AXLGLWCONSTMODIFIER GLenum GL_RGB32UI = 0x8D71;
AXLGLWCONSTMODIFIER GLenum GL_RGBA16UI = 0x8D76;
AXLGLWCONSTMODIFIER GLenum GL_RGB16UI = 0x8D77;
AXLGLWCONSTMODIFIER GLenum GL_RGBA8UI = 0x8D7C;
AXLGLWCONSTMODIFIER GLenum GL_RGB8UI = 0x8D7D;
AXLGLWCONSTMODIFIER GLenum GL_RGBA32I = 0x8D82;
AXLGLWCONSTMODIFIER GLenum GL_RGB32I = 0x8D83;
AXLGLWCONSTMODIFIER GLenum GL_RGBA16I = 0x8D88;
AXLGLWCONSTMODIFIER GLenum GL_RGB16I = 0x8D89;
AXLGLWCONSTMODIFIER GLenum GL_RGBA8I = 0x8D8E;
AXLGLWCONSTMODIFIER GLenum GL_RGB8I = 0x8D8F;
AXLGLWCONSTMODIFIER GLenum GL_RED_INTEGER = 0x8D94;
AXLGLWCONSTMODIFIER GLenum GL_GREEN_INTEGER = 0x8D95;
AXLGLWCONSTMODIFIER GLenum GL_BLUE_INTEGER = 0x8D96;
AXLGLWCONSTMODIFIER GLenum GL_ALPHA_INTEGER = 0x8D97;
AXLGLWCONSTMODIFIER GLenum GL_RGB_INTEGER = 0x8D98;
AXLGLWCONSTMODIFIER GLenum GL_RGBA_INTEGER = 0x8D99;
AXLGLWCONSTMODIFIER GLenum GL_BGR_INTEGER = 0x8D9A;
AXLGLWCONSTMODIFIER GLenum GL_BGRA_INTEGER = 0x8D9B;
AXLGLWCONSTMODIFIER GLenum GL_SAMPLER_1D_ARRAY = 0x8DC0;
AXLGLWCONSTMODIFIER GLenum GL_SAMPLER_2D_ARRAY = 0x8DC1;
AXLGLWCONSTMODIFIER GLenum GL_SAMPLER_1D_ARRAY_SHADOW = 0x8DC3;
AXLGLWCONSTMODIFIER GLenum GL_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;
AXLGLWCONSTMODIFIER GLenum GL_SAMPLER_CUBE_SHADOW = 0x8DC5;
AXLGLWCONSTMODIFIER GLenum GL_UNSIGNED_INT_VEC2 = 0x8DC6;
AXLGLWCONSTMODIFIER GLenum GL_UNSIGNED_INT_VEC3 = 0x8DC7;
AXLGLWCONSTMODIFIER GLenum GL_UNSIGNED_INT_VEC4 = 0x8DC8;
AXLGLWCONSTMODIFIER GLenum GL_INT_SAMPLER_1D = 0x8DC9;
AXLGLWCONSTMODIFIER GLenum GL_INT_SAMPLER_2D = 0x8DCA;
AXLGLWCONSTMODIFIER GLenum GL_INT_SAMPLER_3D = 0x8DCB;
AXLGLWCONSTMODIFIER GLenum GL_INT_SAMPLER_CUBE = 0x8DCC;
AXLGLWCONSTMODIFIER GLenum GL_INT_SAMPLER_1D_ARRAY = 0x8DCE;
AXLGLWCONSTMODIFIER GLenum GL_INT_SAMPLER_2D_ARRAY = 0x8DCF;
AXLGLWCONSTMODIFIER GLenum GL_UNSIGNED_INT_SAMPLER_1D = 0x8DD1;
AXLGLWCONSTMODIFIER GLenum GL_UNSIGNED_INT_SAMPLER_2D = 0x8DD2;
AXLGLWCONSTMODIFIER GLenum GL_UNSIGNED_INT_SAMPLER_3D = 0x8DD3;
AXLGLWCONSTMODIFIER GLenum GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;
AXLGLWCONSTMODIFIER GLenum GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6;
AXLGLWCONSTMODIFIER GLenum GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;
AXLGLWCONSTMODIFIER GLenum GL_QUERY_WAIT = 0x8E13;
AXLGLWCONSTMODIFIER GLenum GL_QUERY_NO_WAIT = 0x8E14;
AXLGLWCONSTMODIFIER GLenum GL_QUERY_BY_REGION_WAIT = 0x8E15;
AXLGLWCONSTMODIFIER GLenum GL_QUERY_BY_REGION_NO_WAIT = 0x8E16;

typedef void (APIENTRY * PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);
typedef void (APIENTRY * PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);
typedef void (APIENTRY * PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint colorNumber, const GLbyte* name);
typedef void (APIENTRY * PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);
typedef void (APIENTRY * PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawBuffer, GLfloat depth, GLint stencil);
typedef void (APIENTRY * PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawBuffer, const GLfloat* value);
typedef void (APIENTRY * PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawBuffer, const GLint* value);
typedef void (APIENTRY * PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawBuffer, const GLuint* value);
typedef void (APIENTRY * PFNGLCOLORMASKIPROC) (GLuint buf, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (APIENTRY * PFNGLDISABLEIPROC) (GLenum cap, GLuint index);
typedef void (APIENTRY * PFNGLENABLEIPROC) (GLenum cap, GLuint index);
typedef void (APIENTRY * PFNGLENDCONDITIONALRENDERPROC) (void);
typedef void (APIENTRY * PFNGLENDTRANSFORMFEEDBACKPROC) (void);
typedef void (APIENTRY * PFNGLGETBOOLEANI_VPROC) (GLenum pname, GLuint index, GLboolean* data);
typedef GLint (APIENTRY * PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLbyte* name);
typedef const GLubyte* (APIENTRY * PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);
typedef void (APIENTRY * PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint* params);
typedef void (APIENTRY * PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint* params);
typedef void (APIENTRY * PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLbyte * name);
typedef void (APIENTRY * PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint* params);
typedef void (APIENTRY * PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint* params);
typedef void (APIENTRY * PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint* params);
typedef GLboolean (APIENTRY * PFNGLISENABLEDIPROC) (GLenum cap, GLuint index);
typedef void (APIENTRY * PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint* params);
typedef void (APIENTRY * PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint* params);
typedef void (APIENTRY * PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLbyte *const* varyings, GLenum bufferMode);
typedef void (APIENTRY * PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);
typedef void (APIENTRY * PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint* value);
typedef void (APIENTRY * PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRY * PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint* value);
typedef void (APIENTRY * PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRY * PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint* value);
typedef void (APIENTRY * PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRY * PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint* value);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint v0);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint* v0);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint v0);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint* v0);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint v0, GLint v1);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint* v0);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint v0, GLuint v1);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint* v0);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint* v0);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint* v0);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte* v0);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint* v0);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort* v0);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte* v0);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint* v0);
typedef void (APIENTRY * PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort* v0);
typedef void (APIENTRY * PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void*pointer);

AXLGLWAPI PFNGLBEGINCONDITIONALRENDERPROC glBeginConditionalRender;
AXLGLWAPI PFNGLBEGINTRANSFORMFEEDBACKPROC glBeginTransformFeedback;
AXLGLWAPI PFNGLBINDFRAGDATALOCATIONPROC glBindFragDataLocation;
AXLGLWAPI PFNGLCLAMPCOLORPROC glClampColor;
AXLGLWAPI PFNGLCLEARBUFFERFIPROC glClearBufferfi;
AXLGLWAPI PFNGLCLEARBUFFERFVPROC glClearBufferfv;
AXLGLWAPI PFNGLCLEARBUFFERIVPROC glClearBufferiv;
AXLGLWAPI PFNGLCLEARBUFFERUIVPROC glClearBufferuiv;
AXLGLWAPI PFNGLCOLORMASKIPROC glColorMaski;
AXLGLWAPI PFNGLDISABLEIPROC glDisablei;
AXLGLWAPI PFNGLENABLEIPROC glEnablei;
AXLGLWAPI PFNGLENDCONDITIONALRENDERPROC glEndConditionalRender;
AXLGLWAPI PFNGLENDTRANSFORMFEEDBACKPROC glEndTransformFeedback;
AXLGLWAPI PFNGLGETBOOLEANI_VPROC glGetBooleani_v;
AXLGLWAPI PFNGLGETFRAGDATALOCATIONPROC glGetFragDataLocation;
AXLGLWAPI PFNGLGETSTRINGIPROC glGetStringi;
AXLGLWAPI PFNGLGETTEXPARAMETERIIVPROC glGetTexParameterIiv;
AXLGLWAPI PFNGLGETTEXPARAMETERIUIVPROC glGetTexParameterIuiv;
AXLGLWAPI PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glGetTransformFeedbackVarying;
AXLGLWAPI PFNGLGETUNIFORMUIVPROC glGetUniformuiv;
AXLGLWAPI PFNGLGETVERTEXATTRIBIIVPROC glGetVertexAttribIiv;
AXLGLWAPI PFNGLGETVERTEXATTRIBIUIVPROC glGetVertexAttribIuiv;
AXLGLWAPI PFNGLISENABLEDIPROC glIsEnabledi;
AXLGLWAPI PFNGLTEXPARAMETERIIVPROC glTexParameterIiv;
AXLGLWAPI PFNGLTEXPARAMETERIUIVPROC glTexParameterIuiv;
AXLGLWAPI PFNGLTRANSFORMFEEDBACKVARYINGSPROC glTransformFeedbackVaryings;
AXLGLWAPI PFNGLUNIFORM1UIPROC glUniform1ui;
AXLGLWAPI PFNGLUNIFORM1UIVPROC glUniform1uiv;
AXLGLWAPI PFNGLUNIFORM2UIPROC glUniform2ui;
AXLGLWAPI PFNGLUNIFORM2UIVPROC glUniform2uiv;
AXLGLWAPI PFNGLUNIFORM3UIPROC glUniform3ui;
AXLGLWAPI PFNGLUNIFORM3UIVPROC glUniform3uiv;
AXLGLWAPI PFNGLUNIFORM4UIPROC glUniform4ui;
AXLGLWAPI PFNGLUNIFORM4UIVPROC glUniform4uiv;
AXLGLWAPI PFNGLVERTEXATTRIBI1IPROC glVertexAttribI1i;
AXLGLWAPI PFNGLVERTEXATTRIBI1IVPROC glVertexAttribI1iv;
AXLGLWAPI PFNGLVERTEXATTRIBI1UIPROC glVertexAttribI1ui;
AXLGLWAPI PFNGLVERTEXATTRIBI1UIVPROC glVertexAttribI1uiv;
AXLGLWAPI PFNGLVERTEXATTRIBI2IPROC glVertexAttribI2i;
AXLGLWAPI PFNGLVERTEXATTRIBI2IVPROC glVertexAttribI2iv;
AXLGLWAPI PFNGLVERTEXATTRIBI2UIPROC glVertexAttribI2ui;
AXLGLWAPI PFNGLVERTEXATTRIBI2UIVPROC glVertexAttribI2uiv;
AXLGLWAPI PFNGLVERTEXATTRIBI3IPROC glVertexAttribI3i;
AXLGLWAPI PFNGLVERTEXATTRIBI3IVPROC glVertexAttribI3iv;
AXLGLWAPI PFNGLVERTEXATTRIBI3UIPROC glVertexAttribI3ui;
AXLGLWAPI PFNGLVERTEXATTRIBI3UIVPROC glVertexAttribI3uiv;
AXLGLWAPI PFNGLVERTEXATTRIBI4BVPROC glVertexAttribI4bv;
AXLGLWAPI PFNGLVERTEXATTRIBI4IPROC glVertexAttribI4i;
AXLGLWAPI PFNGLVERTEXATTRIBI4IVPROC glVertexAttribI4iv;
AXLGLWAPI PFNGLVERTEXATTRIBI4SVPROC glVertexAttribI4sv;
AXLGLWAPI PFNGLVERTEXATTRIBI4UBVPROC glVertexAttribI4ubv;
AXLGLWAPI PFNGLVERTEXATTRIBI4UIPROC glVertexAttribI4ui;
AXLGLWAPI PFNGLVERTEXATTRIBI4UIVPROC glVertexAttribI4uiv;
AXLGLWAPI PFNGLVERTEXATTRIBI4USVPROC glVertexAttribI4usv;
AXLGLWAPI PFNGLVERTEXATTRIBIPOINTERPROC glVertexAttribIPointer;
AXLGLWAPI bool V_3_0;

// GL_VERSION_3_1
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_BUFFER_FORMAT 0x8C2E
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_RED_SNORM 0x8F90
#define GL_RG_SNORM 0x8F91
#define GL_RGB_SNORM 0x8F92
#define GL_RGBA_SNORM 0x8F93
#define GL_R8_SNORM 0x8F94
#define GL_RG8_SNORM 0x8F95
#define GL_RGB8_SNORM 0x8F96
#define GL_RGBA8_SNORM 0x8F97
#define GL_R16_SNORM 0x8F98
#define GL_RG16_SNORM 0x8F99
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGBA16_SNORM 0x8F9B
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121

typedef void (APIENTRY * PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (APIENTRY * PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei primcount);
typedef void (APIENTRY * PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint buffer);
typedef void (APIENTRY * PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalFormat, GLuint buffer);

AXLGLWAPI PFNGLDRAWARRAYSINSTANCEDPROC glDrawArraysInstanced;
AXLGLWAPI PFNGLDRAWELEMENTSINSTANCEDPROC glDrawElementsInstanced;
AXLGLWAPI PFNGLPRIMITIVERESTARTINDEXPROC glPrimitiveRestartIndex;
AXLGLWAPI PFNGLTEXBUFFERPROC glTexBuffer;
AXLGLWAPI bool V_3_1;

// GL_VERSION_3_2
AXLGLWCONSTMODIFIER GLenum GL_CONTEXT_CORE_PROFILE_BIT = 0x00000001;
AXLGLWCONSTMODIFIER GLenum GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002;
AXLGLWCONSTMODIFIER GLenum GL_LINES_ADJACENCY = 0x000A;
AXLGLWCONSTMODIFIER GLenum GL_LINE_STRIP_ADJACENCY = 0x000B;
AXLGLWCONSTMODIFIER GLenum GL_TRIANGLES_ADJACENCY = 0x000C;
AXLGLWCONSTMODIFIER GLenum GL_TRIANGLE_STRIP_ADJACENCY = 0x000D;
AXLGLWCONSTMODIFIER GLenum GL_PROGRAM_POINT_SIZE = 0x8642;
AXLGLWCONSTMODIFIER GLenum GL_GEOMETRY_VERTICES_OUT = 0x8916;
AXLGLWCONSTMODIFIER GLenum GL_GEOMETRY_INPUT_TYPE = 0x8917;
AXLGLWCONSTMODIFIER GLenum GL_GEOMETRY_OUTPUT_TYPE = 0x8918;
AXLGLWCONSTMODIFIER GLenum GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29;
AXLGLWCONSTMODIFIER GLenum GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7;
AXLGLWCONSTMODIFIER GLenum GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8;
AXLGLWCONSTMODIFIER GLenum GL_GEOMETRY_SHADER = 0x8DD9;
AXLGLWCONSTMODIFIER GLenum GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF;
AXLGLWCONSTMODIFIER GLenum GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0;
AXLGLWCONSTMODIFIER GLenum GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1;
AXLGLWCONSTMODIFIER GLenum GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;
AXLGLWCONSTMODIFIER GLenum GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123;
AXLGLWCONSTMODIFIER GLenum GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124;
AXLGLWCONSTMODIFIER GLenum GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;
AXLGLWCONSTMODIFIER GLenum GL_CONTEXT_PROFILE_MASK = 0x9126;

typedef void (APIENTRY * PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRY * PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum value, GLint64 * data);
typedef void (APIENTRY * PFNGLGETINTEGER64I_VPROC) (GLenum pname, GLuint index, GLint64 * data);

AXLGLWAPI PFNGLFRAMEBUFFERTEXTUREPROC glFramebufferTexture;
AXLGLWAPI PFNGLGETBUFFERPARAMETERI64VPROC glGetBufferParameteri64v;
AXLGLWAPI PFNGLGETINTEGER64I_VPROC glGetInteger64i_v;
AXLGLWAPI bool V_3_2;

// GL_VERSION_3_3
AXLGLWCONSTMODIFIER GLenum GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE;
AXLGLWCONSTMODIFIER GLenum GL_RGB10_A2UI = 0x906F;

typedef void (APIENTRY * PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);

AXLGLWAPI PFNGLVERTEXATTRIBDIVISORPROC glVertexAttribDivisor;
AXLGLWAPI bool V_3_3;

} // axl.glw.gl1
} // axl.glw
} // axl